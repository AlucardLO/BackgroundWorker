#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackgroundWorkerService.Logic.Implementation.JobStore.Linq2Sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BackgroundWorkerService")]
	public partial class Linq2SqlJobStoreDalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBackgroundWorkerJobExecutionHistory(BackgroundWorkerJobExecutionHistory instance);
    partial void UpdateBackgroundWorkerJobExecutionHistory(BackgroundWorkerJobExecutionHistory instance);
    partial void DeleteBackgroundWorkerJobExecutionHistory(BackgroundWorkerJobExecutionHistory instance);
    partial void InsertBackgroundWorkerJob(BackgroundWorkerJob instance);
    partial void UpdateBackgroundWorkerJob(BackgroundWorkerJob instance);
    partial void DeleteBackgroundWorkerJob(BackgroundWorkerJob instance);
    partial void InsertBackgroundWorkerAlert(BackgroundWorkerAlert instance);
    partial void UpdateBackgroundWorkerAlert(BackgroundWorkerAlert instance);
    partial void DeleteBackgroundWorkerAlert(BackgroundWorkerAlert instance);
    #endregion
		
		public Linq2SqlJobStoreDalDataContext() : 
				base(global::BackgroundWorkerService.Logic.Properties.Settings.Default.BackgroundWorkerServiceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Linq2SqlJobStoreDalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq2SqlJobStoreDalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq2SqlJobStoreDalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq2SqlJobStoreDalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BackgroundWorkerJobExecutionHistory> BackgroundWorkerJobExecutionHistories
		{
			get
			{
				return this.GetTable<BackgroundWorkerJobExecutionHistory>();
			}
		}
		
		public System.Data.Linq.Table<BackgroundWorkerJob> BackgroundWorkerJobs
		{
			get
			{
				return this.GetTable<BackgroundWorkerJob>();
			}
		}
		
		public System.Data.Linq.Table<BackgroundWorkerAlert> BackgroundWorkerAlerts
		{
			get
			{
				return this.GetTable<BackgroundWorkerAlert>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackgroundWorkerJobExecutionHistory")]
	public partial class BackgroundWorkerJobExecutionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _JobId;
		
		private int _StatusId;
		
		private System.Guid _JobUniqueId;
		
		private string _Application;
		
		private string _Group;
		
		private string _Name;
		
		private string _Description;
		
		private string _Type;
		
		private System.DateTime _CreatedDate;
		
		private string _Data;
		
		private string _MetaData;
		
		private System.Nullable<System.TimeSpan> _AbsoluteTimeout;
		
		private int _QueueId;
		
		private string _Instance;
		
		private System.DateTime _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
		private System.Nullable<bool> _Success;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnJobIdChanging(long value);
    partial void OnJobIdChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnJobUniqueIdChanging(System.Guid value);
    partial void OnJobUniqueIdChanged();
    partial void OnApplicationChanging(string value);
    partial void OnApplicationChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnMetaDataChanging(string value);
    partial void OnMetaDataChanged();
    partial void OnAbsoluteTimeoutChanging(System.Nullable<System.TimeSpan> value);
    partial void OnAbsoluteTimeoutChanged();
    partial void OnQueueIdChanging(int value);
    partial void OnQueueIdChanged();
    partial void OnInstanceChanging(string value);
    partial void OnInstanceChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    partial void OnSuccessChanging(System.Nullable<bool> value);
    partial void OnSuccessChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public BackgroundWorkerJobExecutionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="BigInt NOT NULL")]
		public long JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobUniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobUniqueId
		{
			get
			{
				return this._JobUniqueId;
			}
			set
			{
				if ((this._JobUniqueId != value))
				{
					this.OnJobUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._JobUniqueId = value;
					this.SendPropertyChanged("JobUniqueId");
					this.OnJobUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="NVarChar(MAX)")]
		public string Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(MAX)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaData", DbType="NVarChar(MAX)")]
		public string MetaData
		{
			get
			{
				return this._MetaData;
			}
			set
			{
				if ((this._MetaData != value))
				{
					this.OnMetaDataChanging(value);
					this.SendPropertyChanging();
					this._MetaData = value;
					this.SendPropertyChanged("MetaData");
					this.OnMetaDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsoluteTimeout", DbType="Time")]
		public System.Nullable<System.TimeSpan> AbsoluteTimeout
		{
			get
			{
				return this._AbsoluteTimeout;
			}
			set
			{
				if ((this._AbsoluteTimeout != value))
				{
					this.OnAbsoluteTimeoutChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteTimeout = value;
					this.SendPropertyChanged("AbsoluteTimeout");
					this.OnAbsoluteTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueId", DbType="Int NOT NULL")]
		public int QueueId
		{
			get
			{
				return this._QueueId;
			}
			set
			{
				if ((this._QueueId != value))
				{
					this.OnQueueIdChanging(value);
					this.SendPropertyChanging();
					this._QueueId = value;
					this.SendPropertyChanged("QueueId");
					this.OnQueueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Instance
		{
			get
			{
				return this._Instance;
			}
			set
			{
				if ((this._Instance != value))
				{
					this.OnInstanceChanging(value);
					this.SendPropertyChanging();
					this._Instance = value;
					this.SendPropertyChanged("Instance");
					this.OnInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="Bit")]
		public System.Nullable<bool> Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this.OnSuccessChanging(value);
					this.SendPropertyChanging();
					this._Success = value;
					this.SendPropertyChanged("Success");
					this.OnSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackgroundWorkerJobs")]
	public partial class BackgroundWorkerJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _StatusId;
		
		private System.Guid _UniqueId;
		
		private string _Application;
		
		private string _Group;
		
		private string _Name;
		
		private string _Description;
		
		private string _Type;
		
		private System.DateTime _CreatedDate;
		
		private string _Data;
		
		private string _MetaData;
		
		private System.Nullable<System.TimeSpan> _AbsoluteTimeout;
		
		private int _QueueId;
		
		private System.Nullable<System.DateTime> _LastExecutionStartDateTime;
		
		private System.Nullable<System.DateTime> _LastExecutionEndDateTime;
		
		private System.Nullable<System.DateTime> _NextExecutionStartDateTime;
		
		private string _LastErrorMessage;
		
		private string _Instance;
		
		private string _ScheduleType;
		
		private string _Schedule;
		
		private bool _SuppressHistory;
		
		private bool _DeleteWhenDone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnApplicationChanging(string value);
    partial void OnApplicationChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnMetaDataChanging(string value);
    partial void OnMetaDataChanged();
    partial void OnAbsoluteTimeoutChanging(System.Nullable<System.TimeSpan> value);
    partial void OnAbsoluteTimeoutChanged();
    partial void OnQueueIdChanging(int value);
    partial void OnQueueIdChanged();
    partial void OnLastExecutionStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastExecutionStartDateTimeChanged();
    partial void OnLastExecutionEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastExecutionEndDateTimeChanged();
    partial void OnNextExecutionStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnNextExecutionStartDateTimeChanged();
    partial void OnLastErrorMessageChanging(string value);
    partial void OnLastErrorMessageChanged();
    partial void OnInstanceChanging(string value);
    partial void OnInstanceChanged();
    partial void OnScheduleTypeChanging(string value);
    partial void OnScheduleTypeChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnSuppressHistoryChanging(bool value);
    partial void OnSuppressHistoryChanged();
    partial void OnDeleteWhenDoneChanging(bool value);
    partial void OnDeleteWhenDoneChanged();
    #endregion
		
		public BackgroundWorkerJob()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="NVarChar(MAX)")]
		public string Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(MAX)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaData", DbType="NVarChar(MAX)")]
		public string MetaData
		{
			get
			{
				return this._MetaData;
			}
			set
			{
				if ((this._MetaData != value))
				{
					this.OnMetaDataChanging(value);
					this.SendPropertyChanging();
					this._MetaData = value;
					this.SendPropertyChanged("MetaData");
					this.OnMetaDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsoluteTimeout", DbType="Time")]
		public System.Nullable<System.TimeSpan> AbsoluteTimeout
		{
			get
			{
				return this._AbsoluteTimeout;
			}
			set
			{
				if ((this._AbsoluteTimeout != value))
				{
					this.OnAbsoluteTimeoutChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteTimeout = value;
					this.SendPropertyChanged("AbsoluteTimeout");
					this.OnAbsoluteTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueId", DbType="Int NOT NULL")]
		public int QueueId
		{
			get
			{
				return this._QueueId;
			}
			set
			{
				if ((this._QueueId != value))
				{
					this.OnQueueIdChanging(value);
					this.SendPropertyChanging();
					this._QueueId = value;
					this.SendPropertyChanged("QueueId");
					this.OnQueueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastExecutionStartDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastExecutionStartDateTime
		{
			get
			{
				return this._LastExecutionStartDateTime;
			}
			set
			{
				if ((this._LastExecutionStartDateTime != value))
				{
					this.OnLastExecutionStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastExecutionStartDateTime = value;
					this.SendPropertyChanged("LastExecutionStartDateTime");
					this.OnLastExecutionStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastExecutionEndDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastExecutionEndDateTime
		{
			get
			{
				return this._LastExecutionEndDateTime;
			}
			set
			{
				if ((this._LastExecutionEndDateTime != value))
				{
					this.OnLastExecutionEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastExecutionEndDateTime = value;
					this.SendPropertyChanged("LastExecutionEndDateTime");
					this.OnLastExecutionEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextExecutionStartDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextExecutionStartDateTime
		{
			get
			{
				return this._NextExecutionStartDateTime;
			}
			set
			{
				if ((this._NextExecutionStartDateTime != value))
				{
					this.OnNextExecutionStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NextExecutionStartDateTime = value;
					this.SendPropertyChanged("NextExecutionStartDateTime");
					this.OnNextExecutionStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastErrorMessage", DbType="NVarChar(MAX)")]
		public string LastErrorMessage
		{
			get
			{
				return this._LastErrorMessage;
			}
			set
			{
				if ((this._LastErrorMessage != value))
				{
					this.OnLastErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._LastErrorMessage = value;
					this.SendPropertyChanged("LastErrorMessage");
					this.OnLastErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="NVarChar(MAX)")]
		public string Instance
		{
			get
			{
				return this._Instance;
			}
			set
			{
				if ((this._Instance != value))
				{
					this.OnInstanceChanging(value);
					this.SendPropertyChanging();
					this._Instance = value;
					this.SendPropertyChanged("Instance");
					this.OnInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleType", DbType="NVarChar(MAX)")]
		public string ScheduleType
		{
			get
			{
				return this._ScheduleType;
			}
			set
			{
				if ((this._ScheduleType != value))
				{
					this.OnScheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._ScheduleType = value;
					this.SendPropertyChanged("ScheduleType");
					this.OnScheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="NVarChar(MAX)")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppressHistory", DbType="Bit NOT NULL")]
		public bool SuppressHistory
		{
			get
			{
				return this._SuppressHistory;
			}
			set
			{
				if ((this._SuppressHistory != value))
				{
					this.OnSuppressHistoryChanging(value);
					this.SendPropertyChanging();
					this._SuppressHistory = value;
					this.SendPropertyChanged("SuppressHistory");
					this.OnSuppressHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteWhenDone", DbType="Bit NOT NULL")]
		public bool DeleteWhenDone
		{
			get
			{
				return this._DeleteWhenDone;
			}
			set
			{
				if ((this._DeleteWhenDone != value))
				{
					this.OnDeleteWhenDoneChanging(value);
					this.SendPropertyChanging();
					this._DeleteWhenDone = value;
					this.SendPropertyChanged("DeleteWhenDone");
					this.OnDeleteWhenDoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackgroundWorkerAlerts")]
	public partial class BackgroundWorkerAlert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _JobId;
		
		private System.Nullable<long> _JobHistoryId;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnJobIdChanging(long value);
    partial void OnJobIdChanged();
    partial void OnJobHistoryIdChanging(System.Nullable<long> value);
    partial void OnJobHistoryIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public BackgroundWorkerAlert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="BigInt NOT NULL")]
		public long JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", DbType="BigInt")]
		public System.Nullable<long> JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

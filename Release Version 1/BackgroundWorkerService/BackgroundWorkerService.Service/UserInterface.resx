<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B///gA////h/////////////
</value>
  </data>
</root>